// Generated by CoffeeScript 1.6.3
var dive, fs, path;

fs = require('fs');

path = require('path');

dive = require('dive');

module.exports = {
  recursiveSearchSync: function(filename, dir) {
    var f, matches;
    matches = [];
    f = (function(dir) {
      var i, list, next;
      list = fs.readdirSync(dir);
      i = 0;
      next = (function() {
        var file, stat;
        file = list[i++];
        if (!file) {
          return matches;
        }
        file = path.join(dir, file);
        stat = fs.statSync(file);
        if (stat && stat.isDirectory()) {
          f(file);
          return next();
        } else {
          if (path.basename(file) === filename) {
            matches.push(file);
          }
          return next();
        }
      });
      return next();
    });
    f(dir);
    return matches;
  },
  recursiveSearch: function(filename, dir, callback, complete) {
    var results;
    results = [];
    return (function() {
      return dive(dir, function(err, file) {
        if (err) {
          return callback(err);
        }
        if (path.basename(file) === filename) {
          results.push(file);
          return callback(null, file);
        }
      }, function() {
        return complete(results);
      });
    })();
  }
};
